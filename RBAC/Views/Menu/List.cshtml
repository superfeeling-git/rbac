
@{
    Layout = null;
}


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>layuiAdmin 内容系统 - 文章列表</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link href="~/LayUI/dist/layuiadmin/layui/css/layui.css" rel="stylesheet" />
    <link href="~/LayUI/dist/layuiadmin/style/admin.css" rel="stylesheet" />
</head>
<body>

    <div class="layui-fluid">
        <div class="layui-card">
            <div class="layui-card-body">
                <table id="menu-list" lay-filter="menu-list"></table>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/LayUI/dist/layuiadmin/layui/layui.js"></script>
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>
    <script>
        layui.config({
            base: '/LayUI/dist/layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index' //主入口模块
        }).use(['index', 'contlist', 'table'], function () {
            var table = layui.table
                , form = layui.form;

            table.render({
                elem: '#menu-list'
                , url: '/Menu/GetRootNodes'
                , toolbar: 'default'
                , cols: [[ //标题栏
                    { field: 'MenuID', title: '菜单ID', width: 80 }
                    , { field: 'MenuName', title: '菜单名称', edit: "text" }
                    , { field: 'MenuLink', title: '链接地址' }
                    , { field: 'IsShow', title: '是否显示', templet: function (d) {
                        //得到当前行数据，并拼接成自定义模板
                        return d.IsShow?"显示":"隐藏"
                    } }
                    , { toolbar: '#barDemo', title: '操作' }
                ]]
            });

            //监听搜索
            form.on('submit(LAY-app-contlist-search)', function (data) {
                var field = data.field;

                //执行重载
                table.reload('LAY-app-content-list', {
                    where: field
                });
            });

            //工具条事件
            table.on('tool(menu-list)', function (obj) { //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的 DOM 对象（如果有的话）

                if (layEvent === 'del') { //删除
                    layer.confirm('真的删除行么', function (index) {
                        $.ajax({
                            url: "/Menu/DeleteNode",
                            type: "get",
                            dataType: "json",
                            data: { id: data.MenuID },
                            success: function (d) {
                                if (d > 0) {
                                    obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                                    
                                    layer.msg("删除节点成功", { icon: 1 });
                                } else {
                                    layer.msg("还有子节点", { icon: 3, time: 6000 }, function () {
                                        window.location.reload();
                                    });
                                }
                            }
                        })
                        layer.close(index);
                        //向服务端发送删除指令
                    });
                } else if (layEvent === 'edit') { //编辑
                    layer.open({
                        type: 2,
                        title: '编辑菜单',
                        shadeClose: true,
                        shade: 0.8,
                        area: ['680px', '300px'],
                        content: `/Menu/Edit/${data.MenuID}` //iframe的url
                    });
                }
            });

            table.on('edit(menu-list)', function (obj) { //注：edit是固定事件名，test是table原始容器的属性 lay-filter="对应的值"
                console.log(obj.value); //得到修改后的值
                console.log(obj.field); //当前编辑的字段名
                console.log(obj.data); //所在行的所有相关数据  

                $.ajax({
                    url: "/Menu/UpdateName",
                    type: "post",
                    dataType: "json",
                    data: obj.data,
                    success: function (d) {
                        layer.msg("更新成功", {icon:1})
                    }
                })
            });

        });
    </script>
</body>
</html>

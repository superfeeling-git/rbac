@model RBAC.Model.Menu
@{
    Layout = null;
}


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>layuiAdmin 内容系统 - 文章列表</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link href="~/LayUI/dist/layuiadmin/layui/css/layui.css" rel="stylesheet" />
    <link href="~/LayUI/dist/layuiadmin/style/admin.css" rel="stylesheet" />
</head>
<body>

    <div class="layui-fluid">
        <div class="layui-card">
            <div class="layui-card-body">
                <div id="test1"></div>
                <form class="layui-form " action="" style="margin-top:3em;">
                    <div class="layui-form-item">
                        <label class="layui-form-label">菜单名称</label>
                        <div class="layui-input-block">
                            <input asp-for="MenuName" placeholder="请输入菜单名称" autocomplete="off" class="layui-input" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">链接地址</label>
                        <div class="layui-input-block">
                            <input asp-for="MenuLink" placeholder="请输入菜单的链接地址" autocomplete="off" class="layui-input" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">是否显示</label>
                        <div class="layui-input-block">
                            <input type="checkbox" value="True" asp-for="IsShow" lay-skin="switch" lay-text="显示|隐藏">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <div class="layui-input-block">
                            <input type="hidden" asp-for="MenuID" />
                            <button class="layui-btn" lay-submit lay-filter="formDemo">立即提交</button>
                            <button type="reset" class="layui-btn layui-btn-primary">重置</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/LayUI/dist/layuiadmin/layui/layui.js"></script>
    <script>
        layui.config({
            base: '/LayUI/dist/layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index' //主入口模块
        }).use(['form','index', 'contlist', 'table', 'tree'], function () {
            var tree = layui.tree;
            var form = layui.form;
            var treedata = [];                  //1

            $.ajax({                            //2  异步   两条路    
                url: "/Menu/GetNode",           //一条路：调用后台方法
                type: "get",
                dataType: "json",
                async: false,
                success: function (d) {
                    treedata = d;
                }
            })

            //console.log(treedata);              //3继续向前走

           
            //渲染
            var inst1 = tree.render({              //3
                elem: '#test1'  //绑定元素
                , showCheckbox: false
                , edit: ['add', 'del']
                //, accordion: true
                //, showLine: false
                , onlyIconControl: true
                , text: {
                    defaultNodeName: '空节点' //节点默认名称
                    , none: '无数据' //数据为空时的提示文本
                }
                , data: treedata
                , click: function (obj) {
                    console.log(obj.data); //得到当前点击的节点数据
                    console.log(obj.state); //得到当前节点的展开状态：open、close、normal
                    console.log(obj.elem); //得到当前节点元素

                    console.log(obj.data.children); //当前节点下是否有子节点
                    var nodedata = obj.data;
                    $("#MenuName").val(nodedata.title);
                    $("#MenuLink").val(nodedata.href);
                    $("#IsShow").attr("checked", nodedata.IsShow);
                    $("#MenuID").val(nodedata.id);
                    form.render();
                }
                , operate: function (obj) {
                    var type = obj.type; //得到操作类型：add、edit、del
                    var data = obj.data; //得到当前节点的数据
                    var elem = obj.elem; //得到当前节点元素

                    //Ajax 操作
                    var id = data.id; //得到节点索引
                    if (type === 'add') { //增加节点
                        $.ajax({
                            url: "/Menu/CreateNode",
                            type: "post",
                            dataType: "json",
                            data: data,
                            success: function (d) {
                                layer.msg("添加菜单成功", function () {
                                    window.location.reload();
                                });
                            }
                        })
                        return 123;
                    } else if (type === 'del') { //删除节点
                        $.ajax({
                            url: "/Menu/DeleteNode",
                            type: "get",
                            dataType: "json",
                            data: { id: id},
                            success: function (d) {
                                if (d > 0) {
                                    layer.msg("删除节点成功", { icon: 1});
                                } else {
                                    layer.msg("还有子节点", { icon: 3, time: 6000 }, function () {
                                        window.location.reload();
                                    });
                                }
                            }
                        })
                    };
                }
            });


            //更新节点
            form.on('submit(formDemo)', function (data) {
                console.log(data.elem) //被执行事件的元素DOM对象，一般为button对象
                console.log(data.form) //被执行提交的form对象，一般在存在form标签时才会返回
                console.log(data.field) //当前容器的全部表单字段，名值对形式：{name: value}

                $.ajax({
                    url: "/Menu/UpdateNode",
                    type: "post",
                    dataType: "json",
                    data: $("form").serialize(),
                    success: function (d) {
                        layer.msg("修改成功", { time: 1000 }, function () {
                            window.location.reload();
                        });
                    }
                })
                return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
            });
        });
    </script>
</body>
</html>
